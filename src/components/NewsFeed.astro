---
// Componente de noticias tecnológicas
---

<div id="news-component" class="hidden">
  <div class="section-title">Noticias Tecnológicas - Cosmos e IA</div>

  <div id="news-content" class="mb-4">
    <div class="loading-dots">Cargando noticias</div>
  </div>

  <div class="mt-4 text-sm text-terminal-dim">Escribe 'menu' para volver al menú principal.</div>
</div>

<script>
  interface NewsArticle {
    title: string;
    description: string;
    url: string;
    publishedAt: string;
    source: {
      name: string;
    };
  }

  class NewsFeed {
    private newsApiKey: string;
    private updateInterval: number = 300000; // 5 minutos
    private intervalId?: number;

    constructor() {
      this.newsApiKey = import.meta.env.PUBLIC_NEWS_API_KEY || 'demo';
    }

    async fetchNews(): Promise<void> {
      const newsContent = document.getElementById('news-content');
      if (!newsContent) return;

      try {
        // Fetch noticias de IA
        const aiNews = await this.fetchNewsFromAPI('artificial intelligence OR AI');

        // Fetch noticias del cosmos
        const spaceNews = await this.fetchNewsFromAPI('space OR astronomy OR cosmos OR NASA');

        const allNews = [...aiNews, ...spaceNews]
          .sort((a, b) => new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime())
          .slice(0, 5);

        if (allNews.length === 0) {
          newsContent.innerHTML = `
            <div class="error-text">
              No se pudieron cargar noticias.
              ${this.newsApiKey === 'demo' ? 'Configura tu API key de NewsAPI en el archivo .env' : ''}
            </div>
            <div class="mt-4 text-terminal-dim">
              <p>Noticias de ejemplo:</p>
              ${this.getDemoNews()}
            </div>
          `;
          return;
        }

        let html = '<div class="space-y-4">';
        allNews.forEach((article, index) => {
          const date = new Date(article.publishedAt).toLocaleDateString('es-ES');
          html += `
            <div class="border-l-2 border-terminal-dim pl-4 py-2">
              <div class="text-terminal-bright">${index + 1}. ${this.escapeHtml(article.title)}</div>
              <div class="text-sm mt-1">${this.escapeHtml(article.description || 'Sin descripción')}</div>
              <div class="text-xs text-terminal-dim mt-2">
                <span>${article.source.name}</span> |
                <span>${date}</span> |
                <a href="${article.url}" target="_blank" rel="noopener noreferrer"
                   class="text-terminal-text hover:text-terminal-bright underline">
                  Leer más →
                </a>
              </div>
            </div>
          `;
        });
        html += '</div>';

        newsContent.innerHTML = html;
      } catch (error) {
        console.error('Error fetching news:', error);
        newsContent.innerHTML = `
          <div class="error-text">Error al cargar noticias.</div>
          <div class="mt-4 text-terminal-dim">
            <p>Noticias de ejemplo:</p>
            ${this.getDemoNews()}
          </div>
        `;
      }
    }

    private async fetchNewsFromAPI(query: string): Promise<NewsArticle[]> {
      if (this.newsApiKey === 'demo') {
        return [];
      }

      const response = await fetch(
        `https://newsapi.org/v2/everything?q=${encodeURIComponent(query)}&language=es,en&sortBy=publishedAt&pageSize=3&apiKey=${this.newsApiKey}`
      );

      if (!response.ok) {
        throw new Error('Error fetching news');
      }

      const data = await response.json();
      return data.articles || [];
    }

    private getDemoNews(): string {
      const demoArticles = [
        {
          title: 'Nuevos avances en inteligencia artificial generativa',
          description: 'Investigadores presentan mejoras significativas en modelos de lenguaje.',
          source: 'Tech News',
          date: new Date().toLocaleDateString('es-ES'),
        },
        {
          title: 'NASA descubre exoplaneta potencialmente habitable',
          description:
            'El telescopio James Webb identifica signos de agua en atmósfera planetaria.',
          source: 'Space Daily',
          date: new Date().toLocaleDateString('es-ES'),
        },
        {
          title: 'IA ayuda en descubrimientos astronómicos',
          description:
            'Algoritmos de machine learning identifican nuevos patrones en datos espaciales.',
          source: 'Science Today',
          date: new Date().toLocaleDateString('es-ES'),
        },
      ];

      return demoArticles
        .map(
          (article, index) => `
        <div class="border-l-2 border-terminal-dim pl-4 py-2 mt-2">
          <div class="text-terminal-bright">${index + 1}. ${article.title}</div>
          <div class="text-sm mt-1">${article.description}</div>
          <div class="text-xs text-terminal-dim mt-2">
            <span>${article.source}</span> | <span>${article.date}</span>
          </div>
        </div>
      `
        )
        .join('');
    }

    private escapeHtml(text: string): string {
      const div = document.createElement('div');
      div.textContent = text;
      return div.innerHTML;
    }

    startAutoUpdate(): void {
      this.fetchNews();
      this.intervalId = window.setInterval(() => {
        this.fetchNews();
      }, this.updateInterval);
    }

    stopAutoUpdate(): void {
      if (this.intervalId) {
        clearInterval(this.intervalId);
      }
    }
  }

  // Inicializar NewsFeed
  const newsFeed = new NewsFeed();

  document.addEventListener('loadView', (e: Event) => {
    const customEvent = e as CustomEvent;
    if (customEvent.detail.view === 'news') {
      const terminal = window.terminal;
      const newsComponent = document.getElementById('news-component');

      if (terminal && newsComponent) {
        terminal.printOutput(newsComponent.innerHTML);
        newsFeed.startAutoUpdate();
      }
    } else {
      newsFeed.stopAutoUpdate();
    }
  });
</script>

<style>
  /* Estilos adicionales si es necesario */
</style>
