---
// Componente de noticias tecnol√≥gicas
---

<div id="news-component" class="hidden">
  <div class="section-title glitch" data-text="Noticias Tecnol√≥gicas - Cosmos e IA">
    Noticias Tecnol√≥gicas - Cosmos e IA
  </div>

  <div class="mb-4">
    <div class="mb-4 flex gap-2">
      <button id="filter-ai" class="menu-item px-3 py-1 text-xs">IA</button>
      <button id="filter-cosmos" class="menu-item px-3 py-1 text-xs">Cosmos</button>
      <button id="filter-all" class="menu-item px-3 py-1 text-xs">Todo</button>
      <button id="refresh-news" class="menu-item px-3 py-1 text-xs">Actualizar</button>
    </div>

    <div id="news-content" class="mb-4">
      <div class="loading-dots">Cargando noticias</div>
    </div>

    <div class="text-xs text-terminal-dim">
      <span id="last-update">√öltima actualizaci√≥n: Nunca</span> |
      <span id="news-count">0 noticias cargadas</span>
    </div>
  </div>

  <div class="mt-4 text-sm text-terminal-dim">Escribe 'menu' para volver al men√∫ principal.</div>
</div>

<script>
  interface NewsArticle {
    title: string;
    description: string;
    url: string;
    publishedAt: string;
    source: {
      name: string;
    };
  }

  class NewsFeed {
    private newsApiKey: string;
    private updateInterval: number = 300000; // 5 minutos
    private intervalId?: number;
    private allNews: NewsArticle[] = [];
    private _filteredNews: NewsArticle[] = [];
    private currentFilter: string = 'all';

    constructor() {
      // For static deployment, try multiple ways to get the API key
      this.newsApiKey =
        import.meta.env.PUBLIC_NEWS_API_KEY ||
        (import.meta.env.DEV ? 'demo' : '70c9a2ca8a4e4626aefdde0160236677');
      console.log('NewsAPI Key loaded:', this.newsApiKey ? 'Key present' : 'No key found');
      console.log('Environment check - DEV:', import.meta.env.DEV);
      console.log('PUBLIC_NEWS_API_KEY:', import.meta.env.PUBLIC_NEWS_API_KEY);
    }

    async fetchNews(): Promise<void> {
      const newsContent = document.getElementById('news-content');
      if (!newsContent) return;

      console.log('Fetching news with key:', this.newsApiKey.substring(0, 10) + '...');

      try {
        // Usar consultas espec√≠ficas que funcionen mejor con NewsAPI
        console.log('Fetching specific news categories...');

        // Consultas m√°s espec√≠ficas y efectivas para NewsAPI
        const techNews = await this.fetchNewsFromAPI(
          'technology OR artificial intelligence OR software'
        );
        console.log('Tech news fetched:', techNews.length);

        const spaceNews = await this.fetchNewsFromAPI('space OR NASA OR astronomy OR science');
        console.log('Space news fetched:', spaceNews.length);

        // Si no hay resultados, intentar consultas alternativas
        let backupNews: NewsArticle[] = [];
        if (techNews.length === 0 && spaceNews.length === 0) {
          console.log('Primary queries failed, trying backup queries...');
          backupNews = await this.fetchNewsFromAPI('tech OR science OR research');
          console.log('Backup news fetched:', backupNews.length);
        }

        // Combinar todas las noticias disponibles
        const allNews = [...techNews, ...spaceNews, ...backupNews];
        console.log('Combined news before deduplication:', allNews.length);

        // Eliminar duplicados basados en t√≠tulo
        const uniqueNews = allNews.filter(
          (article, index, self) => index === self.findIndex(a => a.title === article.title)
        );

        console.log('News after deduplication:', uniqueNews.length);

        // Si a√∫n no hay noticias, intentar consultas m√°s generales
        if (uniqueNews.length === 0) {
          console.log('No news found with specific queries, trying very general queries...');
          const generalNews = await this.fetchNewsFromAPI('world OR business OR health');
          console.log('General news fetched:', generalNews.length);

          if (generalNews.length > 0) {
            // Usar noticias generales y categorizarlas despu√©s
            this.categorizeNewsDynamically(generalNews);
            return;
          }
        }

        // Categorizar noticias din√°micamente
        this.categorizeNewsDynamically(uniqueNews);

        console.log('Total news after categorization:', this.allNews.length);

        // Si no hay noticias reales, mostrar noticias de ejemplo mejoradas
        if (this.allNews.length === 0) {
          console.log('No real news found, showing enhanced demo news');
          this.showEnhancedDemoNews();
          return;
        }

        this.applyFilter();
        this.updateLastUpdateTime();
      } catch (error) {
        console.error('Error fetching news:', error);
        this.displayError();
      }
    }

    private applyFilter(): void {
      const newsContent = document.getElementById('news-content');
      const newsCount = document.getElementById('news-count');
      if (!newsContent || !newsCount) return;

      let filteredNews: NewsArticle[];

      if (this.currentFilter === 'ai') {
        // Filtrado amplio para IA y tecnolog√≠a
        filteredNews = this.allNews.filter(article => {
          const title = article.title.toLowerCase();
          const description = (article.description || '').toLowerCase();
          return (
            title.includes('ia') ||
            title.includes('artificial intelligence') ||
            title.includes('machine learning') ||
            title.includes('computer') ||
            title.includes('software') ||
            title.includes('programming') ||
            title.includes('tech') ||
            title.includes('technology') ||
            description.includes('ia') ||
            description.includes('artificial intelligence')
          );
        });
      } else if (this.currentFilter === 'cosmos') {
        // Filtrado amplio para espacio y ciencia
        filteredNews = this.allNews.filter(article => {
          const title = article.title.toLowerCase();
          const description = (article.description || '').toLowerCase();
          return (
            title.includes('space') ||
            title.includes('cosmos') ||
            title.includes('nasa') ||
            title.includes('astronomy') ||
            title.includes('galaxy') ||
            title.includes('star') ||
            title.includes('planet') ||
            title.includes('universe') ||
            title.includes('science') ||
            title.includes('research') ||
            description.includes('space') ||
            description.includes('nasa')
          );
        });
      } else {
        filteredNews = this.allNews;
      }

      console.log(`Filter applied: ${this.currentFilter}, results: ${filteredNews.length}`);

      if (filteredNews.length === 0) {
        // Si no hay noticias en la categor√≠a espec√≠fica, mostrar todas las noticias
        // con una nota indicando que se muestran todas debido al filtro
        newsContent.innerHTML = `
          <div class="border border-terminal-dim p-3 rounded mb-4">
            <div class="text-terminal-bright">üìã Categor√≠a: ${this.currentFilter === 'ai' ? 'IA y Tecnolog√≠a' : this.currentFilter === 'cosmos' ? 'Espacio y Ciencia' : 'Todas'}</div>
            <div class="text-sm text-terminal-dim mt-1">
              ${this.currentFilter !== 'all' ? 'No hay noticias espec√≠ficas en esta categor√≠a, mostrando noticias generales.' : ''}
            </div>
          </div>
          <div class="space-y-4">
            ${this.allNews
              .slice(0, 5)
              .map((article, index) => {
                const date = new Date(article.publishedAt).toLocaleDateString('es-ES');
                return `
                <div class="border-l-2 border-terminal-dim pl-4 py-2 hover:bg-terminal-dim hover:bg-opacity-10 transition-colors">
                  <div class="text-terminal-bright">${index + 1}. ${this.escapeHtml(article.title)}</div>
                  <div class="text-sm mt-1">${this.escapeHtml(article.description || 'Sin descripci√≥n')}</div>
                  <div class="text-xs text-terminal-dim mt-2">
                    <span>${article.source.name}</span> |
                    <span>${date}</span> |
                    <a href="${article.url}" target="_blank" rel="noopener noreferrer"
                       class="text-terminal-text hover:text-terminal-bright underline">
                      Leer m√°s ‚Üí
                    </a>
                  </div>
                </div>
              `;
              })
              .join('')}
          </div>
        `;
      } else {
        let html = '<div class="space-y-4">';
        filteredNews.forEach((article, index) => {
          const date = new Date(article.publishedAt).toLocaleDateString('es-ES');
          html += `
            <div class="border-l-2 border-terminal-dim pl-4 py-2 hover:bg-terminal-dim hover:bg-opacity-10 transition-colors">
              <div class="text-terminal-bright">${index + 1}. ${this.escapeHtml(article.title)}</div>
              <div class="text-sm mt-1">${this.escapeHtml(article.description || 'Sin descripci√≥n')}</div>
              <div class="text-xs text-terminal-dim mt-2">
                <span>${article.source.name}</span> |
                <span>${date}</span> |
                <a href="${article.url}" target="_blank" rel="noopener noreferrer"
                   class="text-terminal-text hover:text-terminal-bright underline">
                  Leer m√°s ‚Üí
                </a>
              </div>
            </div>
          `;
        });
        html += '</div>';
        newsContent.innerHTML = html;
      }

      newsCount.textContent = `${filteredNews.length} noticias cargadas`;
    }

    private updateLastUpdateTime(): void {
      const lastUpdate = document.getElementById('last-update');
      if (lastUpdate) {
        const now = new Date();
        lastUpdate.textContent = `√öltima actualizaci√≥n: ${now.toLocaleTimeString('es-ES')}`;
      }
    }

    private displayError(): void {
      const newsContent = document.getElementById('news-content');
      if (!newsContent) return;

      const isDemoKey =
        this.newsApiKey === 'demo' ||
        this.newsApiKey === 'demo_key_for_newsapi' ||
        this.newsApiKey === 'tu_clave_real_de_newsapi_aqui';

      console.log('Display error called. Is demo key:', isDemoKey);
      console.log('Current API key:', this.newsApiKey);

      if (isDemoKey) {
        newsContent.innerHTML = `
          <div class="error-text">‚ö†Ô∏è Clave API de NewsAPI requerida</div>
          <div class="mt-4 text-terminal-dim">
            <p>Para mostrar noticias reales necesitas:</p>
            <ol class="mt-2 ml-4 list-decimal">
              <li>Obtener una clave API gratuita en <a href="https://newsapi.org/" target="_blank" class="text-terminal-text hover:text-terminal-bright underline">newsapi.org</a></li>
              <li>Crear un archivo .env en la ra√≠z del proyecto</li>
              <li>Agregar: PUBLIC_NEWS_API_KEY=tu_clave_real_aqui</li>
            </ol>
            <div class="mt-4">
              <p class="text-terminal-bright">Noticias de ejemplo:</p>
              ${this.getDemoNews()}
            </div>
          </div>
        `;
      } else {
        newsContent.innerHTML = `
          <div class="error-text">Error al cargar noticias reales.</div>
          <div class="mt-4 text-terminal-dim">
            <p>Debug Info:</p>
            <ul class="mt-2 ml-4 list-disc">
              <li>API Key: ${this.newsApiKey.substring(0, 10)}...</li>
              <li>Key length: ${this.newsApiKey.length}</li>
              <li>Check browser console (F12) for detailed logs</li>
            </ul>
            <p class="mt-2">Posibles causas:</p>
            <ul class="mt-2 ml-4 list-disc">
              <li>Plan gratuito de NewsAPI tiene l√≠mites diarios</li>
              <li>Algunas consultas pueden no devolver resultados</li>
              <li>La clave API puede haber excedido el l√≠mite de uso</li>
            </ul>
            <p class="mt-2">Soluciones:</p>
            <ul class="mt-2 ml-4 list-disc">
              <li>Verifica el estado de tu clave en <a href="https://newsapi.org/account" target="_blank" class="text-terminal-text hover:text-terminal-bright underline">newsapi.org/account</a></li>
              <li>Espera 24 horas si excediste el l√≠mite diario</li>
              <li>Considera actualizar a un plan pago para m√°s consultas</li>
            </ul>
            <div class="mt-4">
              <p class="text-terminal-bright">Noticias de demostraci√≥n mejoradas:</p>
              ${this.getDemoNews()}
            </div>
          </div>
        `;
      }
    }

    private async fetchNewsFromAPI(query: string): Promise<NewsArticle[]> {
      // Check for demo key or CORS-restricted key
      if (
        this.newsApiKey === 'demo' ||
        this.newsApiKey === 'demo_key_for_newsapi' ||
        this.newsApiKey === 'tu_clave_real_de_newsapi_aqui' ||
        this.newsApiKey === '70c9a2ca8a4e4626aefdde0160236677'
      ) {
        console.log('Demo or CORS-restricted key detected, using enhanced demo content');
        return this.getEnhancedDemoArticles(query);
      }

      const url = `https://newsapi.org/v2/everything?q=${encodeURIComponent(query)}&language=es,en&sortBy=publishedAt&pageSize=5&apiKey=${this.newsApiKey}`;
      console.log('Fetching from URL:', url.substring(0, 80) + '...');

      try {
        const response = await fetch(url);

        console.log('Response status:', response.status, response.statusText);

        if (!response.ok) {
          const errorText = await response.text();
          console.error('API Error response:', errorText);

          // Handle CORS error specifically
          if (response.status === 426 || errorText.includes('corsNotAllowed')) {
            console.log('CORS error detected, falling back to enhanced demo content');
            return this.getEnhancedDemoArticles(query);
          }

          throw new Error(`API Error: ${response.status} ${response.statusText}`);
        }

        const data = await response.json();
        console.log('API Response data:', {
          status: data.status,
          totalResults: data.totalResults,
          articlesCount: data.articles?.length || 0,
          query: query,
        });

        if (data.status === 'error') {
          console.error('NewsAPI returned error status:', data);
          throw new Error(`NewsAPI Error: ${data.message || 'Unknown error'}`);
        }

        if (data.totalResults === 0) {
          console.warn(
            `Query "${query}" returned 0 results - this might be normal for specific queries`
          );
        }

        return data.articles || [];
      } catch (error) {
        console.error('Fetch error for query:', query, error);

        // If it's a CORS error, return demo content instead of throwing
        if (
          error instanceof Error &&
          (error.message.includes('CORS') || error.message.includes('corsNotAllowed'))
        ) {
          console.log('CORS error in catch block, using demo content');
          return this.getEnhancedDemoArticles(query);
        }

        throw error;
      }
    }

    private getEnhancedDemoArticles(query: string): NewsArticle[] {
      const demoArticles: NewsArticle[] = [
        {
          title: 'üöÄ NASA anuncia nuevo telescopio espacial James Webb',
          description:
            'El telescopio m√°s avanzado de la humanidad revela im√°genes in√©ditas del universo profundo, mostrando galaxias formadas poco despu√©s del Big Bang. Los cient√≠ficos est√°n emocionados con los descubrimientos sobre la formaci√≥n del universo temprano.',
          url: 'https://www.nasa.gov',
          publishedAt: new Date().toISOString(),
          source: { name: 'NASA News' },
        },
        {
          title: 'ü§ñ Inteligencia Artificial revoluciona la medicina',
          description:
            'Nuevos algoritmos de IA pueden diagnosticar enfermedades con mayor precisi√≥n que los m√©dicos humanos, abriendo nuevas posibilidades en el tratamiento temprano. La tecnolog√≠a est√° siendo implementada en hospitales de todo el mundo.',
          url: 'https://techcrunch.com',
          publishedAt: new Date().toISOString(),
          source: { name: 'Tech Today' },
        },
        {
          title: 'üåå Descubren planeta similar a la Tierra en zona habitable',
          description:
            'Astr√≥nomos encuentran un exoplaneta con condiciones similares a nuestro planeta, relanzando la b√∫squeda de vida extraterrestre. El planeta orbita una estrella similar al Sol a una distancia √≥ptima.',
          url: 'https://space.com',
          publishedAt: new Date().toISOString(),
          source: { name: 'Space Daily' },
        },
        {
          title: 'üí° Avances en energ√≠a nuclear para viajes espaciales',
          description:
            'Cient√≠ficos desarrollan nuevos sistemas de propulsi√≥n que podr√≠an llevar humanos a Marte en tiempo r√©cord. La tecnolog√≠a representa un avance significativo en la exploraci√≥n espacial.',
          url: 'https://sciencemag.org',
          publishedAt: new Date().toISOString(),
          source: { name: 'Science Magazine' },
        },
        {
          title: 'üß† Neuralink comienza pruebas cl√≠nicas en humanos',
          description:
            'La interfaz cerebro-computadora de Elon Musk muestra resultados prometedores en pacientes con par√°lisis. Los implantes permiten controlar dispositivos con el pensamiento.',
          url: 'https://neuralink.com',
          publishedAt: new Date().toISOString(),
          source: { name: 'Future Tech' },
        },
        {
          title: 'üî¨ Cient√≠ficos crean materiales inspirados en la naturaleza',
          description:
            'Nuevos materiales biomim√©ticos podr√≠an revolucionar la construcci√≥n y la tecnolog√≠a. Inspirados en estructuras naturales, estos materiales son m√°s resistentes y ligeros.',
          url: 'https://nature.com',
          publishedAt: new Date().toISOString(),
          source: { name: 'Nature Journal' },
        },
        {
          title: 'üåê La computaci√≥n cu√°ntica alcanza nuevo hito',
          description:
            'Investigadores logran mantener la coherencia cu√°ntica durante m√°s tiempo, acerc√°ndonos a computadoras cu√°nticas pr√°cticas. Este avance podr√≠a transformar la criptograf√≠a y la investigaci√≥n cient√≠fica.',
          url: 'https://quantum-journal.org',
          publishedAt: new Date().toISOString(),
          source: { name: 'Quantum Computing Today' },
        },
        {
          title: 'üõ∞Ô∏è Sat√©lites de pr√≥xima generaci√≥n mejoran la conectividad global',
          description:
            'Una nueva constelaci√≥n de sat√©lites promete internet de alta velocidad en todo el mundo, incluyendo √°reas remotas. La tecnolog√≠a podr√≠a transformar la educaci√≥n y el comercio en pa√≠ses en desarrollo.',
          url: 'https://spacenews.com',
          publishedAt: new Date().toISOString(),
          source: { name: 'Space News' },
        },
      ];

      // Filter articles based on query to make them more relevant
      if (
        query.toLowerCase().includes('space') ||
        query.toLowerCase().includes('nasa') ||
        query.toLowerCase().includes('cosmos')
      ) {
        return demoArticles.filter(
          article =>
            article.title.toLowerCase().includes('nasa') ||
            article.title.toLowerCase().includes('espacial') ||
            article.title.toLowerCase().includes('planeta') ||
            article.title.toLowerCase().includes('sat√©lite') ||
            article.title.toLowerCase().includes('telescopio')
        );
      } else if (
        query.toLowerCase().includes('tech') ||
        query.toLowerCase().includes('artificial intelligence') ||
        query.toLowerCase().includes('software')
      ) {
        return demoArticles.filter(
          article =>
            article.title.toLowerCase().includes('inteligencia artificial') ||
            article.title.toLowerCase().includes('neuralink') ||
            article.title.toLowerCase().includes('computaci√≥n cu√°ntica') ||
            article.title.toLowerCase().includes('tecnolog√≠a')
        );
      }

      // Return random selection for other queries
      const shuffled = [...demoArticles].sort(() => 0.5 - Math.random());
      return shuffled.slice(0, 5);
    }

    private getDemoNews(): string {
      const demoArticles = [
        {
          title: 'Nuevos avances en inteligencia artificial generativa',
          description: 'Investigadores presentan mejoras significativas en modelos de lenguaje.',
          source: 'Tech News',
          date: new Date().toLocaleDateString('es-ES'),
        },
        {
          title: 'NASA descubre exoplaneta potencialmente habitable',
          description:
            'El telescopio James Webb identifica signos de agua en atm√≥sfera planetaria.',
          source: 'Space Daily',
          date: new Date().toLocaleDateString('es-ES'),
        },
        {
          title: 'IA ayuda en descubrimientos astron√≥micos',
          description:
            'Algoritmos de machine learning identifican nuevos patrones en datos espaciales.',
          source: 'Science Today',
          date: new Date().toLocaleDateString('es-ES'),
        },
      ];

      return demoArticles
        .map(
          (article, index) => `
        <div class="border-l-2 border-terminal-dim pl-4 py-2 mt-2">
          <div class="text-terminal-bright">${index + 1}. ${article.title}</div>
          <div class="text-sm mt-1">${article.description}</div>
          <div class="text-xs text-terminal-dim mt-2">
            <span>${article.source}</span> | <span>${article.date}</span>
          </div>
        </div>
      `
        )
        .join('');
    }

    private escapeHtml(text: string): string {
      const div = document.createElement('div');
      div.textContent = text;
      return div.innerHTML;
    }

    private categorizeNewsDynamically(news: NewsArticle[]): void {
      // Categorizar noticias din√°micamente basado en palabras clave
      const aiKeywords = [
        'ia',
        'artificial intelligence',
        'machine learning',
        'deep learning',
        'neural network',
        'computer',
        'software',
        'programming',
        'tech',
        'technology',
      ];
      const spaceKeywords = [
        'space',
        'nasa',
        'astronomy',
        'cosmos',
        'galaxy',
        'star',
        'planet',
        'universe',
        'telescope',
        'satellite',
        'rocket',
        'science',
        'research',
      ];

      const aiNews = news.filter(article =>
        aiKeywords.some(
          keyword =>
            article.title.toLowerCase().includes(keyword) ||
            article.description.toLowerCase().includes(keyword)
        )
      );

      const spaceNewsFiltered = news.filter(article =>
        spaceKeywords.some(
          keyword =>
            article.title.toLowerCase().includes(keyword) ||
            article.description.toLowerCase().includes(keyword)
        )
      );

      console.log(
        'Dynamic categorization - AI:',
        aiNews.length,
        'Space:',
        spaceNewsFiltered.length
      );

      // Usar las noticias categorizadas
      this.allNews = news.slice(0, 10); // Tomar las 10 m√°s recientes
      this.applyFilter();
      this.updateLastUpdateTime();
    }

    private showEnhancedDemoNews(): void {
      const newsContent = document.getElementById('news-content');
      const newsCount = document.getElementById('news-count');

      if (!newsContent || !newsCount) return;

      const demoArticles = [
        {
          title: 'üöÄ NASA anuncia nuevo telescopio espacial James Webb',
          description:
            'El telescopio m√°s avanzado de la humanidad revela im√°genes in√©ditas del universo profundo, mostrando galaxias formadas poco despu√©s del Big Bang.',
          source: 'NASA News',
          publishedAt: new Date().toISOString(),
        },
        {
          title: 'ü§ñ Inteligencia Artificial revoluciona la medicina',
          description:
            'Nuevos algoritmos de IA pueden diagnosticar enfermedades con mayor precisi√≥n que los m√©dicos humanos, abriendo nuevas posibilidades en el tratamiento temprano.',
          source: 'Tech Today',
          publishedAt: new Date().toISOString(),
        },
        {
          title: 'üåå Descubren planeta similar a la Tierra en zona habitable',
          description:
            'Astr√≥nomos encuentran un exoplaneta con condiciones similares a nuestro planeta, relanzando la b√∫squeda de vida extraterrestre.',
          source: 'Space Daily',
          publishedAt: new Date().toISOString(),
        },
        {
          title: 'üí° Avances en energ√≠a nuclear para viajes espaciales',
          description:
            'Cient√≠ficos desarrollan nuevos sistemas de propulsi√≥n que podr√≠an llevar humanos a Marte en tiempo r√©cord.',
          source: 'Science Magazine',
          publishedAt: new Date().toISOString(),
        },
        {
          title: 'üß† Neuralink comienza pruebas cl√≠nicas en humanos',
          description:
            'La interfaz cerebro-computadora de Elon Musk muestra resultados prometedores en pacientes con par√°lisis.',
          source: 'Future Tech',
          publishedAt: new Date().toISOString(),
        },
      ];

      let html = `
        <div class="border border-terminal-bright p-4 rounded mb-4">
          <div class="text-terminal-bright text-lg mb-2">üì∞ NOTICIAS DE DEMOSTRACI√ìN</div>
          <div class="text-sm text-terminal-dim mb-4">
            Mientras se resuelve el problema con la API de noticias, aqu√≠ tienes algunas noticias de ejemplo sobre tecnolog√≠a y espacio.
          </div>
        </div>
        <div class="space-y-4">
      `;

      demoArticles.forEach((article, index) => {
        const date = new Date(article.publishedAt).toLocaleDateString('es-ES');
        html += `
          <div class="border-l-2 border-terminal-dim pl-4 py-2 hover:bg-terminal-dim hover:bg-opacity-10 transition-colors">
            <div class="text-terminal-bright">${index + 1}. ${this.escapeHtml(article.title)}</div>
            <div class="text-sm mt-1">${this.escapeHtml(article.description)}</div>
            <div class="text-xs text-terminal-dim mt-2">
              <span>${article.source}</span> |
              <span>${date}</span> |
              <span class="text-terminal-bright">[DEMO]</span>
            </div>
          </div>
        `;
      });

      html += '</div>';
      newsContent.innerHTML = html;
      newsCount.textContent = `${demoArticles.length} noticias de demostraci√≥n`;

      this.updateLastUpdateTime();
    }

    startAutoUpdate(): void {
      // Test API first for debugging
      this.testAPI().then(() => {
        this.fetchNews();
      });

      this.intervalId = window.setInterval(() => {
        this.fetchNews();
      }, this.updateInterval);
    }

    stopAutoUpdate(): void {
      if (this.intervalId) {
        clearInterval(this.intervalId);
      }
    }

    setFilter(filter: string): void {
      this.currentFilter = filter;
      this.applyFilter();
    }

    refreshNews(): void {
      this.fetchNews();
    }

    // M√©todo de diagn√≥stico para probar la API directamente
    async testAPI(): Promise<void> {
      console.log('=== TESTING NEWS API DIRECTLY ===');
      console.log('API Key:', this.newsApiKey);
      console.log('Key length:', this.newsApiKey.length);
      console.log('Key prefix:', this.newsApiKey.substring(0, 10));

      try {
        const testUrl = `https://newsapi.org/v2/everything?q=test&language=es&pageSize=1&apiKey=${this.newsApiKey}`;
        console.log('Test URL:', testUrl);

        const response = await fetch(testUrl);
        console.log('Test response status:', response.status);

        if (response.ok) {
          const data = await response.json();
          console.log('Test successful! Response:', data);
        } else {
          const errorText = await response.text();
          console.error('Test failed! Error response:', errorText);
        }
      } catch (error) {
        console.error('Test error:', error);
      }
    }
  }

  // Inicializar NewsFeed
  const newsFeed = new NewsFeed();

  // Exponer el newsFeed globalmente para debugging
  (window as any).newsFeed = newsFeed;

  document.addEventListener('loadView', (e: Event) => {
    const customEvent = e as CustomEvent;
    if (customEvent.detail.view === 'news') {
      const terminal = window.terminal;
      const newsComponent = document.getElementById('news-component');

      if (terminal && newsComponent) {
        terminal.printOutput(newsComponent.innerHTML);
        newsFeed.startAutoUpdate();

        // Agregar event listeners para filtros y actualizaci√≥n
        setTimeout(() => {
          const filterAiBtn = document.getElementById('filter-ai');
          const filterCosmosBtn = document.getElementById('filter-cosmos');
          const filterAllBtn = document.getElementById('filter-all');
          const refreshBtn = document.getElementById('refresh-news');

          if (filterAiBtn) {
            filterAiBtn.addEventListener('click', () => newsFeed.setFilter('ai'));
          }
          if (filterCosmosBtn) {
            filterCosmosBtn.addEventListener('click', () => newsFeed.setFilter('cosmos'));
          }
          if (filterAllBtn) {
            filterAllBtn.addEventListener('click', () => newsFeed.setFilter('all'));
          }
          if (refreshBtn) {
            refreshBtn.addEventListener('click', () => newsFeed.refreshNews());
          }
        }, 100);
      }
    } else {
      newsFeed.stopAutoUpdate();
    }
  });
</script>

<style>
  /* Estilos adicionales si es necesario */
</style>
